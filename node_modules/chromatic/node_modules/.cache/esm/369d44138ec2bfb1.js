let chalk,pluralize,dedent,error,info,link;_8ec‍.x([["default",()=>_8ec‍.o]]);_8ec‍.w("chalk",[["default",["chalk"],function(v){chalk=v}]]);_8ec‍.w("pluralize",[["default",["pluralize"],function(v){pluralize=v}]]);_8ec‍.w("ts-dedent",[["default",["dedent"],function(v){dedent=v}]]);_8ec‍.w("../../components/icons",[["error",["error"],function(v){error=v}],["info",["info"],function(v){info=v}]]);_8ec‍.w("../../components/link",[["default",["link"],function(v){link=v}]]);






const _8ec‍anonymous=({ build, exitCode }) => {
  const errors = pluralize('build error', build.errorCount, true);
  return dedent(chalk`
    ${error} {bold Encountered ${errors}}: failing with exit code ${exitCode}
    Pass {bold --allow-console-errors} to succeed this command regardless of runtime build errors.
    ${info} Review the errors at ${link(build.webUrl)}
  `);
};_8ec‍.d(_8ec‍anonymous);
